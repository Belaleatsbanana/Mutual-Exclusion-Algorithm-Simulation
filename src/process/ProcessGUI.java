    package process;
    
    import resource.Resource;
    import shared.ResourceType;
    import shared.*;


    import javax.swing.*;
    import javax.swing.border.Border;
    import java.awt.*;
    import java.awt.Color;

    public class ProcessGUI extends javax.swing.JFrame {
    
        /**
         * Creates new form ProcessGUI
         */
        public ProcessGUI() {
            initComponents();
            ((JComponent)getContentPane()).setBorder(BorderFactory.createEmptyBorder(0, 0, 20, 0));
            // Set the colors according to each toggle button's name
            redToggleButton.setBackground(Color.RED);
            redToggleButton.setForeground(Color.WHITE);
    
            orangeToggleButton.setBackground(Color.ORANGE);
            orangeToggleButton.setForeground(Color.BLACK);
    
            yellowToggleButton.setBackground(Color.YELLOW);
            yellowToggleButton.setForeground(Color.BLACK);
    
            greenToggleButton.setBackground(Color.GREEN);
            greenToggleButton.setForeground(Color.BLACK);
    
            blueToggleButton.setBackground(Color.BLUE);
            blueToggleButton.setForeground(Color.WHITE);
    
            whiteToggleButton.setBackground(Color.WHITE);
            whiteToggleButton.setForeground(Color.BLACK);
    
            purpleToggleButton.setBackground(new Color(128, 0, 128)); // Custom purple
            purpleToggleButton.setForeground(Color.WHITE);
    
            blackToggleButton.setBackground(Color.BLACK);
            blackToggleButton.setForeground(Color.WHITE);
    
            // Add a highlight border when selected
            addHighlightBorder(redToggleButton);
            addHighlightBorder(orangeToggleButton);
            addHighlightBorder(yellowToggleButton);
            addHighlightBorder(greenToggleButton);
            addHighlightBorder(blueToggleButton);
            addHighlightBorder(whiteToggleButton);
            addHighlightBorder(purpleToggleButton);
            addHighlightBorder(blackToggleButton);
    
        }
    
        private void addHighlightBorder(javax.swing.JToggleButton button) {
            // Save the default border to restore when the button is unselected
            final Border defaultBorder = button.getBorder();
    
            button.addChangeListener(e -> {
                if (button.isSelected()) {
                    // Create a highlighted border (e.g., a 3-pixel thick black line)
                    button.setBorder(BorderFactory.createLineBorder(Color.BLACK, 3));
                } else {
                    button.setBorder(defaultBorder);
                }
            });
        }
            /**
             * This method is called from within the constructor to initialize the form.
             * WARNING: Do NOT modify this code. The content of this method is always
             * regenerated by the Form Editor.
             */
        private void initComponents() {
    
            headerPanel = new javax.swing.JPanel();
            bananaClothingLabel = new javax.swing.JLabel();
            categoryPanel = new javax.swing.JPanel();
            shirtsToggleButton = new javax.swing.JToggleButton();
            pantsToggleButton = new javax.swing.JToggleButton();
            shoesToggleButton = new javax.swing.JToggleButton();
            selectionPanel = new javax.swing.JPanel();
            colorPanel = new javax.swing.JPanel();
            redToggleButton = new javax.swing.JToggleButton();
            orangeToggleButton = new javax.swing.JToggleButton();
            yellowToggleButton = new javax.swing.JToggleButton();
            greenToggleButton = new javax.swing.JToggleButton();
            blueToggleButton = new javax.swing.JToggleButton();
            whiteToggleButton = new javax.swing.JToggleButton();
            purpleToggleButton = new javax.swing.JToggleButton();
            blackToggleButton = new javax.swing.JToggleButton();
            sizePanel = new javax.swing.JPanel();
            smallToggleButton = new javax.swing.JToggleButton();
            mediumToggleButton = new javax.swing.JToggleButton();
            largeToggleButton = new javax.swing.JToggleButton();
            xLargeToggleButton = new javax.swing.JToggleButton();
            reserveItemPanel = new javax.swing.JPanel();
            itemCodeLabel = new javax.swing.JLabel();
            itemCodeInputField = new javax.swing.JTextField();
            itemQuantityLabel = new javax.swing.JLabel();
            itemQuantityInputField = new javax.swing.JTextField();
            reserveButton = new javax.swing.JButton();
            shirtLabel = new javax.swing.JLabel();
            pantsLabel = new javax.swing.JLabel();
            shoesLabel = new javax.swing.JLabel();
    
            setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
            setTitle("Process");
            setResizable(false);
    
            bananaClothingLabel.setFont(new java.awt.Font("Dialog", Font.BOLD, 18));
            bananaClothingLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
            bananaClothingLabel.setText("Banana Clothing");
            headerPanel.add(bananaClothingLabel);
    
    
            // Modified categoryPanel setup with increased height
            categoryPanel.setLayout(new java.awt.GridLayout(1, 3, 10, 0));
    
            // Shirt sub-panel
            JPanel shirtSubPanel = new JPanel();
            shirtSubPanel.setLayout(new BorderLayout());
            ImageIcon shirtIcon = new ImageIcon(ProcessGUI.class.getResource("/shared/images/shirt.png"));
            shirtIcon.setImage(shirtIcon.getImage().getScaledInstance(100, 90, Image.SCALE_DEFAULT));
            shirtsToggleButton.setIcon(shirtIcon);
            shirtsToggleButton.setPreferredSize(new Dimension(100, 100)); // Increased height
            shirtsToggleButton.setHorizontalAlignment(SwingConstants.CENTER);
            shirtSubPanel.add(shirtsToggleButton, BorderLayout.CENTER);
            shirtLabel.setHorizontalAlignment(SwingConstants.CENTER);
            shirtSubPanel.add(shirtLabel, BorderLayout.SOUTH);
            categoryPanel.add(shirtSubPanel);
            // Pants sub-panel
            JPanel pantsSubPanel = new JPanel();
            pantsSubPanel.setLayout(new BorderLayout());
            ImageIcon pantsIcon = new ImageIcon(ProcessGUI.class.getResource("/shared/images/pant.png"));
            pantsIcon.setImage(pantsIcon.getImage().getScaledInstance(100, 90, Image.SCALE_DEFAULT));
            pantsToggleButton.setIcon(pantsIcon);
            pantsToggleButton.setPreferredSize(new Dimension(100, 100)); // Increased height
            pantsToggleButton.setHorizontalAlignment(SwingConstants.CENTER);
            pantsSubPanel.add(pantsToggleButton, BorderLayout.CENTER);
            pantsLabel.setHorizontalAlignment(SwingConstants.CENTER);
            pantsSubPanel.add(pantsLabel, BorderLayout.SOUTH);
            categoryPanel.add(pantsSubPanel);
    
            // Shoes sub-panel
            JPanel shoesSubPanel = new JPanel();
            shoesSubPanel.setLayout(new BorderLayout());
            ImageIcon shoesIcon = new ImageIcon(ProcessGUI.class.getResource("/shared/images/shoe.png"));
            shoesIcon.setImage(shoesIcon.getImage().getScaledInstance(100, 90, Image.SCALE_DEFAULT));
            shoesToggleButton.setIcon(shoesIcon);
            shoesToggleButton.setPreferredSize(new Dimension(100, 100)); // Increased height
            shoesToggleButton.setHorizontalAlignment(SwingConstants.CENTER);
            shoesSubPanel.add(shoesToggleButton, BorderLayout.CENTER);
            shoesLabel.setHorizontalAlignment(SwingConstants.CENTER);
            shoesSubPanel.add(shoesLabel, BorderLayout.SOUTH);
            categoryPanel.add(shoesSubPanel);
    
            // Group category toggle buttons
            ButtonGroup categoryGroup = new ButtonGroup();
            categoryGroup.add(shirtsToggleButton);
            categoryGroup.add(pantsToggleButton);
            categoryGroup.add(shoesToggleButton);
    
            // Group size radio buttons
            ButtonGroup sizeGroup = new ButtonGroup();
            sizeGroup.add(smallToggleButton);
            sizeGroup.add(mediumToggleButton);
            sizeGroup.add(largeToggleButton);
            sizeGroup.add(xLargeToggleButton);
    
            // Group color radio buttons
            ButtonGroup colorGroup = new ButtonGroup();
            colorGroup.add(redToggleButton);
            colorGroup.add(orangeToggleButton);
            colorGroup.add(yellowToggleButton);
            colorGroup.add(greenToggleButton);
            colorGroup.add(blueToggleButton);
            colorGroup.add(whiteToggleButton);
            colorGroup.add(purpleToggleButton);
            colorGroup.add(blackToggleButton);
    
            selectionPanel.setLayout(new java.awt.GridLayout(1, 2, 50, 5));
    
            colorPanel.setPreferredSize(new java.awt.Dimension(100, 100));
    
            redToggleButton.setBackground(new java.awt.Color(255, 51, 51));
            redToggleButton.setForeground(new java.awt.Color(255, 0, 0));
            redToggleButton.setPreferredSize(new java.awt.Dimension(25, 25));
            colorPanel.add(redToggleButton);
    
            orangeToggleButton.setBackground(new java.awt.Color(255, 51, 51));
            orangeToggleButton.setForeground(new java.awt.Color(255, 0, 0));
            orangeToggleButton.setPreferredSize(new java.awt.Dimension(25, 25));
            colorPanel.add(orangeToggleButton);
    
            yellowToggleButton.setBackground(new java.awt.Color(255, 51, 51));
            yellowToggleButton.setForeground(new java.awt.Color(255, 0, 0));
            yellowToggleButton.setPreferredSize(new java.awt.Dimension(25, 25));
            colorPanel.add(yellowToggleButton);
    
            greenToggleButton.setBackground(new java.awt.Color(255, 51, 51));
            greenToggleButton.setForeground(new java.awt.Color(255, 0, 0));
            greenToggleButton.setPreferredSize(new java.awt.Dimension(25, 25));
            colorPanel.add(greenToggleButton);
    
            blueToggleButton.setBackground(new java.awt.Color(255, 51, 51));
            blueToggleButton.setForeground(new java.awt.Color(255, 0, 0));
            blueToggleButton.setPreferredSize(new java.awt.Dimension(25, 25));
            colorPanel.add(blueToggleButton);
    
            whiteToggleButton.setBackground(new java.awt.Color(255, 51, 51));
            whiteToggleButton.setForeground(new java.awt.Color(255, 0, 0));
            whiteToggleButton.setPreferredSize(new java.awt.Dimension(25, 25));
            colorPanel.add(whiteToggleButton);
    
            purpleToggleButton.setBackground(new java.awt.Color(255, 51, 51));
            purpleToggleButton.setForeground(new java.awt.Color(255, 0, 0));
            purpleToggleButton.setPreferredSize(new java.awt.Dimension(25, 25));
            colorPanel.add(purpleToggleButton);
    
            blackToggleButton.setBackground(new java.awt.Color(255, 51, 51));
            blackToggleButton.setForeground(new java.awt.Color(255, 0, 0));
            blackToggleButton.setPreferredSize(new java.awt.Dimension(25, 25));
            colorPanel.add(blackToggleButton);
    
            selectionPanel.add(colorPanel);
    
            smallToggleButton.setText("S");
            smallToggleButton.setPreferredSize(new java.awt.Dimension(47, 25));

            sizePanel.add(smallToggleButton);
    
            mediumToggleButton.setText("M");
            mediumToggleButton.setPreferredSize(new java.awt.Dimension(47, 25));

            sizePanel.add(mediumToggleButton);
    
            largeToggleButton.setText("L");
            largeToggleButton.setPreferredSize(new java.awt.Dimension(47, 25));

            sizePanel.add(largeToggleButton);
    
            xLargeToggleButton.setText("XL");
            xLargeToggleButton.setPreferredSize(new java.awt.Dimension(47, 25));

            sizePanel.add(xLargeToggleButton);
    
            selectionPanel.add(sizePanel);
    
            itemCodeLabel.setText("Enter item code");
    

    
            itemQuantityLabel.setText("Enter Quantity");
    
            reserveButton.setText("Reserve");
            reserveButton.addActionListener(e -> handleReserve());
    
            // Create a new GroupLayout for reserveItemPanel
            javax.swing.GroupLayout reserveItemPanelLayout = new javax.swing.GroupLayout(reserveItemPanel);
            reserveItemPanel.setLayout(reserveItemPanelLayout);
    
    // Optional: Link sizes so both labels (and both text fields) have the same width
            reserveItemPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, itemCodeLabel, itemQuantityLabel);
            reserveItemPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, itemCodeInputField, itemQuantityInputField);
    
            reserveItemPanelLayout.setHorizontalGroup(
                    reserveItemPanelLayout.createSequentialGroup()
                            .addGap(37, 37, 37)
                            // First column: item code label and input field
                            .addGroup(reserveItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(itemCodeLabel)
                                    .addComponent(itemCodeInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            // Second column: item quantity label and input field
                            .addGroup(reserveItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(itemQuantityLabel)
                                    .addComponent(itemQuantityInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            // Reserve button on the same row as the text fields
                            .addComponent(reserveButton)
                            .addGap(30, 30, 30)
            );
    
            reserveItemPanelLayout.setVerticalGroup(
                    reserveItemPanelLayout.createSequentialGroup()
                            // First row: labels aligned side by side
                            .addGroup(reserveItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(itemCodeLabel)
                                    .addComponent(itemQuantityLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            // Second row: input fields and reserve button aligned by baseline
                            .addGroup(reserveItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(itemCodeInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(itemQuantityInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(reserveButton))
            );
    
    
            shirtLabel.setFont(new java.awt.Font("Dialog", Font.BOLD, 18)); // NOI18N
            shirtLabel.setText("Shirts");
    
            pantsLabel.setFont(new java.awt.Font("Dialog", Font.BOLD, 18)); // NOI18N
            pantsLabel.setText("Pants");
    
            shoesLabel.setFont(new java.awt.Font("Dialog", Font.BOLD, 18)); // NOI18N
            shoesLabel.setText("Shoes");
            // Modified main layout to remove label references
            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                    .addContainerGap()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(categoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                                            .addComponent(reserveItemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(selectionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(41, 41, 41))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(categoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE).addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                                    .addComponent(selectionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(reserveItemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap())
            );
    
            pack();
        }



        private void handleReserve() {
            // Get selected category
            ResourceType resourceType = null;
            if (shirtsToggleButton.isSelected()) {
                resourceType = ResourceType.TSHIRTS;
            } else if (pantsToggleButton.isSelected()) {
                resourceType = ResourceType.BOTTOMS;
            } else if (shoesToggleButton.isSelected()) {
                resourceType = ResourceType.SHOES;
            } else {
                JOptionPane.showMessageDialog(this, "Please select a category (Shirts, Pants, or Shoes)!");
                return;
            }

            // Get selected color
            java.awt.Color color = null;
            if (redToggleButton.isSelected()) {
                color = java.awt.Color.RED;
            } else if (orangeToggleButton.isSelected()) {
                color = java.awt.Color.ORANGE;
            } else if (yellowToggleButton.isSelected()) {
                color = java.awt.Color.YELLOW;
            } else if (greenToggleButton.isSelected()) {
                color = java.awt.Color.GREEN;
            } else if (blueToggleButton.isSelected()) {
                color = java.awt.Color.BLUE;
            } else if (whiteToggleButton.isSelected()) {
                color = java.awt.Color.WHITE;
            } else if (purpleToggleButton.isSelected()) {
                color = new java.awt.Color(128, 0, 128); // Custom purple
            } else if (blackToggleButton.isSelected()) {
                color = java.awt.Color.BLACK;
            } else {
                JOptionPane.showMessageDialog(this, "Please select a color!");
                return;
            }

            // Get selected size
            Size size = null;
            if (smallToggleButton.isSelected()) {
                size = Size.S;
            } else if (mediumToggleButton.isSelected()) {
                size = Size.M;
            } else if (largeToggleButton.isSelected()) {
                size = Size.L;
            } else if (xLargeToggleButton.isSelected()) {
                size = Size.XL;
            } else {
                JOptionPane.showMessageDialog(this, "Please select a size!");
                return;
            }

            // Get item code and quantity
            String itemCode = itemCodeInputField.getText().trim();
            String quantityStr = itemQuantityInputField.getText().trim();

            if (itemCode.isEmpty() || quantityStr.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Item code and quantity are required!");
                return;
            }

            try {
                int quantity = Integer.parseInt(quantityStr);
                if (quantity <= 0) {
                    JOptionPane.showMessageDialog(this, "Quantity must be a positive number!");
                    return;
                }

                // Create the Resource object
                Resource resource = new Resource(
                        itemCode,
                        "Custom Item",
                        resourceType,
                        color,
                        size,
                        quantity
                );

                // Generate a unique process ID
                String processId = "P" + System.currentTimeMillis();

                // Create the Process thread (assumes Process has an appropriate constructor)
                Process processThread = new Process(processId, "localhost", 5000, resource);

                // Disable the reserve button so it cannot be pressed again during processing
                reserveButton.setEnabled(false);

                // Start the process thread
                processThread.start();

                // Use a SwingWorker to wait for the process thread to finish
                new SwingWorker<Void, Void>() {
                    @Override
                    protected Void doInBackground() throws Exception {
                        // Wait for the process thread to complete its execution
                        processThread.join();
                        return null;
                    }

                    @Override
                    protected void done() {
                        // Re-enable the reserve button and show a completion message
                        reserveButton.setEnabled(true);
                        JOptionPane.showMessageDialog(ProcessGUI.this, "Reservation process completed!");
                    }
                }.execute();

            } catch (NumberFormatException ex) {
                JOptionPane.showMessageDialog(this, "Invalid quantity! Enter a valid number.");
            }
        }


        /**
         * @param args the command line arguments
         */
        public static void main(String[] args) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
             */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(ProcessGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(ProcessGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(ProcessGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(ProcessGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
    
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new ProcessGUI().setVisible(true);
                }
            });
        }
    
        // Variables declaration - do not modify
        private javax.swing.JLabel bananaClothingLabel;
        private javax.swing.JToggleButton blackToggleButton;
        private javax.swing.JToggleButton blueToggleButton;
        private javax.swing.JPanel categoryPanel;
        private javax.swing.JPanel colorPanel;
        private javax.swing.JToggleButton greenToggleButton;
        private javax.swing.JPanel headerPanel;
        private javax.swing.JTextField itemCodeInputField;
        private javax.swing.JLabel itemCodeLabel;
        private javax.swing.JTextField itemQuantityInputField;
        private javax.swing.JLabel itemQuantityLabel;
        private javax.swing.JToggleButton largeToggleButton;
        private javax.swing.JToggleButton mediumToggleButton;
        private javax.swing.JToggleButton orangeToggleButton;
        private javax.swing.JLabel pantsLabel;
        private javax.swing.JToggleButton pantsToggleButton;
        private javax.swing.JToggleButton purpleToggleButton;
        private javax.swing.JToggleButton redToggleButton;
        private javax.swing.JButton reserveButton;
        private javax.swing.JPanel reserveItemPanel;
        private javax.swing.JPanel selectionPanel;
        private javax.swing.JLabel shirtLabel;
        private javax.swing.JToggleButton shirtsToggleButton;
        private javax.swing.JLabel shoesLabel;
        private javax.swing.JToggleButton shoesToggleButton;
        private javax.swing.JPanel sizePanel;
        private javax.swing.JToggleButton smallToggleButton;
        private javax.swing.JToggleButton whiteToggleButton;
        private javax.swing.JToggleButton xLargeToggleButton;
        private javax.swing.JToggleButton yellowToggleButton;
        // End of variables declaration
    
    }
